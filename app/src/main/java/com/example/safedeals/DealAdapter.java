package com.example.safedeals;


import android.content.Context;
import android.content.Intent;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.view.menu.MenuView;
import androidx.recyclerview.widget.RecyclerView;

import com.google.firebase.database.ChildEventListener;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.squareup.picasso.Picasso;

import java.util.ArrayList;

public class DealAdapter extends  RecyclerView.Adapter<DealAdapter.DealViewHolder> {

    ArrayList<TravelDeal> deals;
    private FirebaseDatabase mFirebaseDatabase;
    private DatabaseReference mDatabaseReference;
    //connecting to firebase realtime database to check or listen  when an deal is added to the database
    private ChildEventListener mChildEventListener;
    private ImageView imageDeal;



     public  DealAdapter(){

         //FirebaseUtil.openFbReference("traveldeals",this);
         mFirebaseDatabase = FirebaseUtil.mFirebaseDatabase;
         mDatabaseReference = FirebaseUtil.mDatabaseReference;
         this.deals =FirebaseUtil.mDeals;
         mChildEventListener = new ChildEventListener() {
             @Override
             public void onChildAdded(@NonNull DataSnapshot dataSnapshot, @Nullable String s){
                 //using a datasnapshot to populate the Travel Deal
                 TravelDeal td = dataSnapshot.getValue(TravelDeal.class);
                 Log.d("Deal:",td.getTitle());
                 //set the id to the push id that was generated by firebase so that we can easily read it later
                 td.setId(dataSnapshot.getKey());
                 deals.add(td);

                    notifyItemInserted(deals.size()-1);
             }

             @Override
             public void onChildChanged(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {

             }

             @Override
             public void onChildRemoved(@NonNull DataSnapshot dataSnapshot) {

             }

             @Override
             public void onChildMoved(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {

             }

             @Override
             public void onCancelled(@NonNull DatabaseError databaseError) {

             }
         };
         mDatabaseReference.addChildEventListener(mChildEventListener);
        }

    @NonNull
    @Override
    public DealViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        Context  context = parent.getContext();
        View itemView = LayoutInflater.from(context)
                .inflate(R.layout.rv_row,parent,false);
        return new DealViewHolder(itemView);
    }

    @Override
    public void onBindViewHolder(@NonNull DealViewHolder holder, int position) {
         TravelDeal deal = deals.get(position);
         holder.bind(deal);

    }

    @Override
    public int getItemCount() {

       return deals.size();
     }


    public  class  DealViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener{

        TextView tvTitle;
        TextView tvDescription;
        TextView tvPrice;
        //use this class to describe how to bind the data in a single row

        public DealViewHolder(@NonNull View itemView) {
            super(itemView);
            tvTitle =(TextView) itemView.findViewById(R.id.tvTitle);
            tvDescription =(TextView) itemView.findViewById(R.id.tvDescripttion);
            tvPrice =(TextView) itemView.findViewById(R.id.tvPrice);
            imageDeal =(ImageView)  itemView.findViewById(R.id.imageDeal);
            itemView.setOnClickListener(this);

        }

        //this method binds the data that is passed on the rows on the recycler view
        public void bind(TravelDeal deal){

               tvTitle.setText(deal.getTitle());
               tvDescription.setText(deal.getDescription());
               tvPrice.setText(deal.getPrice());
              showImage(deal.getImageUrl());
        }

        @Override
        public void onClick(@NonNull View view) {
            int position = getAdapterPosition();
            Log.d("Click",String.valueOf(position));

            TravelDeal selectedDeal = deals.get(position);
            Intent intent = new Intent(view.getContext(),DealActivity.class);
            intent.putExtra("Deal", selectedDeal);
            view.getContext().startActivity(intent);
        }
        private void showImage(String url) {
            if (url != null && url.isEmpty()==false) {
                Picasso.with(imageDeal.getContext())
                        .load(url)
                        .resize(160, 160)
                        .centerCrop()
                        .into(imageDeal);
            }
        }
    }

}
